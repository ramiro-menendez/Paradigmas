TestCase subclass: #TareaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'ParadigmasTP-TP-Test'!!TareaTest methodsFor: 'tests' stamp: 'RamiroMenendez 4/24/2024 16:31'!testTareaNuevaGetYSet	|t|	t := Tarea nuevaDesde: 2 hasta: 3 conCodigo: $A.		self assert: t horaInicial equals: 2.	self assert: t horaFinal equals: 3.	self assert: t codigoOrden equals: $A.		t horaInicial: 9; horaFinal: 13; codigoOrden: $Z.		self assert: t horaInicial equals: 9.	self assert: t horaFinal equals: 13.	self assert: t codigoOrden equals: $Z.	! !Object subclass: #Actividad	instanceVariableNames: 'nombre recurso duracionHoras'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!Actividad commentStamp: 'RamiroMenendez 4/12/2024 20:33' prior: 0!"Representa una actividad"Public API and Key Messages- message one   - message two - Actividad new: unNombre recurso: unRecurso duracionHoras: duracion!!Actividad methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 16:10'!recurso: unRecurso	recurso := unRecurso  ! !!Actividad methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 16:10'!nombre: unNombre	nombre := unNombre! !!Actividad methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 16:10'!duracionHoras: duracion	duracionHoras := duracion ! !!Actividad methodsFor: 'accessing' stamp: 'RamiroMenendez 4/16/2024 23:52'!duracionHoras	^duracionHoras ! !!Actividad methodsFor: 'accessing' stamp: 'RamiroMenendez 4/16/2024 23:51'!recurso	^recurso ! !!Actividad methodsFor: 'as yet unclassified' stamp: 'RamiroMenendez 4/20/2024 10:21'!generarTarea	recurso cronograma! !!Actividad methodsFor: 'as yet unclassified' stamp: 'RamiroMenendez 4/22/2024 10:53'!generarTarea: duracion	recurso cronograma agregarTareaDuracion: duracion.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Actividad class	instanceVariableNames: ''!!Actividad class methodsFor: 'instance creation' stamp: 'RamiroMenendez 4/19/2024 20:26'!new: unNombre recurso: unRecurso duracionHoras: duracion	^self new nombre: unNombre; recurso: unRecurso; duracionHoras: duracion; generarTarea.! !Object subclass: #Cronograma	instanceVariableNames: 'listaTareas'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!Cronograma commentStamp: 'RamiroMenendez 4/12/2024 20:47' prior: 0!"Representa un cronograma, tiene una lista de tareas asignado"Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.!!Cronograma methodsFor: 'adding item' stamp: 'RamiroMenendez 4/22/2024 19:24'!agregarTareaDuracion: unaDuracion desde: horaDisponible conCodigo: unCodigo	listaTareas add: (Tarea nuevaDesde: horaDisponible hasta: horaDisponible + unaDuracion conCodigo: unCodigo).! !!Cronograma methodsFor: 'adding item' stamp: 'RamiroMenendez 4/22/2024 18:51'!agregarTareaDuracion: unaDuracion desde: horaDisponible	listaTareas add: (Tarea nuevaDesde: horaDisponible hasta: horaDisponible + unaDuracion ).! !!Cronograma methodsFor: 'accessing' stamp: 'RamiroMenendez 4/22/2024 19:35'!listaTareas	^listaTareas! !!Cronograma methodsFor: 'initialization' stamp: 'RamiroMenendez 4/22/2024 19:36'!initialize 	listaTareas := OrderedCollection new.! !Object subclass: #Disponibilidad	instanceVariableNames: 'hora recurso'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!Disponibilidad commentStamp: 'RamiroMenendez 4/24/2024 15:50' prior: 0!"Esta clase representa una disponibilidad de un recurso, contiene la hora disponible y el recurso al cual hace referencia"Public API and Key Messages- hora- hora: unaHora- recurso- recurso: unRecurso!!Disponibilidad methodsFor: 'accessing' stamp: 'RamiroMenendez 4/23/2024 18:30'!recurso	^recurso! !!Disponibilidad methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 21:39'!recurso: unRecurso	recurso := unRecurso ! !!Disponibilidad methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 21:40'!hora: unaHora	hora := unaHora ! !!Disponibilidad methodsFor: 'accessing' stamp: 'RamiroMenendez 4/16/2024 23:53'!hora	^hora! !Object subclass: #OrdenDeProduccion	instanceVariableNames: 'producto codigo'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!OrdenDeProduccion commentStamp: 'RamiroMenendez 4/12/2024 16:14' prior: 0!"Representa una orden de producción, contiente un producto y un código" Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.!!OrdenDeProduccion methodsFor: 'accessing' stamp: 'RamiroMenendez 4/16/2024 23:49'!producto	^producto ! !!OrdenDeProduccion methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 16:15'!codigo: unCodigo	codigo := unCodigo  ! !!OrdenDeProduccion methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 16:15'!producto: unProducto	producto := unProducto ! !!OrdenDeProduccion methodsFor: 'accessing' stamp: 'RamiroMenendez 4/16/2024 23:56'!codigo	^codigo ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!OrdenDeProduccion class	instanceVariableNames: ''!!OrdenDeProduccion class methodsFor: 'instance creation' stamp: 'RamiroMenendez 4/12/2024 16:15'!new: unProducto codigo: unCodigo	^self new producto: unProducto; codigo: unCodigo ! !Object subclass: #PlanDeProduccion	instanceVariableNames: 'listaRecursos'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!PlanDeProduccion commentStamp: 'RamiroMenendez 4/13/2024 15:12' prior: 0!"Representa un plan de producción" Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.!!PlanDeProduccion methodsFor: 'sorting' stamp: 'RamiroMenendez 4/24/2024 15:29'!ordenarLista: unSet	|lista|		"Se ordena según la hora inicial de la primer tarea de cada recurso"	lista := unSet asSortedCollection: [ :i |				(i cronograma listaTareas at: 1) horaInicial.			 ] ascending.			"Se transforma en una OrderedCollection para luego poder usar el método 'at: put:'"	lista := lista asOrderedCollection.		2 to: (lista size) do: [ :i |				"Se consulta si la primer hora de trabajo del recurso es igual al del recurso siguiente"				(((lista at: i) cronograma listaTareas at: 1) horaInicial) = (((lista at: i-1) cronograma listaTareas at: 1) horaInicial) ifTrue: [ 																								"Se recorren los caracteres, en la primer diferencia que se encuente, se ordenan los recursos en forma ascendiente.								Una vez que se hace un cambio, no se toca más."								|sinCambio|								sinCambio := true.								1 to: (((lista at: i) nombre size) min: ((lista at: i-1) nombre size)) do: [  :j |																sinCambio & ((((lista at: i) nombre at:j) asciiValue < ((lista at: i-1) nombre at: j) asciiValue)) ifTrue: [ 																										|aux|																										aux := lista at: i.																										lista at: (i) put: (lista at: i-1).																										lista at: (i-1) put: aux.																										sinCambio := false.																									 ].].																		].						 ].		^lista! !!PlanDeProduccion methodsFor: 'resolving' stamp: 'RamiroMenendez 4/24/2024 15:12'!planificar: ordenesordenes do: [ :i | 		|horaAux horaAux2|		horaAux := 0.		horaAux2 := 0.				"recorre las ordenes"		i producto listaActividades do: [ :j |				"recorre las actividades del producto"				(j recurso class = GrupoRecurso)ifTrue: [   "----->  Si ese recurso es un grupo, accede aquí"															|recursoAux|															recursoAux := j recurso obtenerDisponibilidad recurso.																													listaRecursos add: recursoAux. "agrego el recurso a la lista de recursos del plan de producción"															horaAux := recursoAux obtenerDisponibilidad hora.										"Ahora se pregunta, ¿la primer hora disponible del recurso es menor a la hora en la que se esta trabajando la actividad?										si es así, se trabaja con la hora mayor."															(horaAux < horaAux2) ifTrue: [ horaAux := horaAux2 ]. 															recursoAux cronograma agregarTareaDuracion: (j duracionHoras - 1) desde: horaAux conCodigo: i codigo.															"Se actualiza la hora en la cual se trabaja la actividad"															horaAux2 := horaAux + j duracionHoras.										 ].												(j recurso class = GrupoRecurso)ifFalse:[				listaRecursos add: j recurso. "agrego el recurso a una lista"				horaAux := j recurso obtenerDisponibilidad hora.				(horaAux < horaAux2) ifTrue: [ horaAux := horaAux2 ].				j recurso cronograma agregarTareaDuracion: (j duracionHoras - 1) desde: horaAux conCodigo: i codigo.				horaAux2 := horaAux + j duracionHoras.].							 	].	 	].! !!PlanDeProduccion methodsFor: 'printing' stamp: 'RamiroMenendez 4/24/2024 16:21'!imprimir	|tamanioPalabraMasLarga|	tamanioPalabraMasLarga := 0.	"Se busca el tamanio de la palabra mas larga para poder espaciar correctamente la tabla de la lista de recursos."	listaRecursos do: [ :i |							tamanioPalabraMasLarga := tamanioPalabraMasLarga max: i nombre size.						 ].	listaRecursos := self ordenarLista: listaRecursos.			tamanioPalabraMasLarga + 2 timesRepeat: [Transcript show: ' '].Transcript show: '| _0_1_2_3_4_5_6_7_8_9_0_1_2_3_4_5_6_7_8_9_0 |' ;cr.	listaRecursos do: [ :i |							(i class = GrupoRecurso)ifTrue: [ 										i listaRecursos do: [ :j | Transcript show: j nombre. (tamanioPalabraMasLarga + 2 - j nombre size) timesRepeat: [ Transcript show: ' ' ].											Transcript show: '| '.																						j imprimirCronograma. Transcript show: ' |'.											Transcript cr] ] 																														ifFalse: [ Transcript show: i nombre. (tamanioPalabraMasLarga + 2 - i nombre size) timesRepeat: [ Transcript show: ' ' ].											Transcript show: '| '. i imprimirCronograma. Transcript show: ' |'. Transcript cr].						 ].! !!PlanDeProduccion methodsFor: 'initialization' stamp: 'RamiroMenendez 4/23/2024 01:16'!initialize	listaRecursos := Set new.! !Object subclass: #Producto	instanceVariableNames: 'nombre listaActividades'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!Producto commentStamp: 'RamiroMenendez 4/12/2024 15:28' prior: 0!"Representa un producto"Public API and Key Messages- message one   - message two - (for bonus points) how to create instances. !!Producto methodsFor: 'adding item' stamp: 'RamiroMenendez 4/12/2024 16:06'!agregarActividad: unaActividad	listaActividades add: unaActividad ! !!Producto methodsFor: 'accessing' stamp: 'RamiroMenendez 4/16/2024 23:50'!listaActividades	^listaActividades ! !!Producto methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 15:29'!nombre	^nombre! !!Producto methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 15:30'!nombre: unNombre	nombre := unNombre! !!Producto methodsFor: 'accessing' stamp: 'RamiroMenendez 4/22/2024 23:56'!codigo	^super codigo! !!Producto methodsFor: 'initialization' stamp: 'RamiroMenendez 4/12/2024 16:05'!crearListaActividades	listaActividades := OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Producto class	instanceVariableNames: ''!!Producto class methodsFor: 'instance creation' stamp: 'RamiroMenendez 4/12/2024 16:05'!new: unProducto	^self new nombre: unProducto; crearListaActividades.! !Object subclass: #Recurso	instanceVariableNames: 'cronograma'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!Recurso commentStamp: 'RamiroMenendez 4/12/2024 20:48' prior: 0!"Representa un recurso, clase abstracta y tiene un cronograma asignado, puede ser: -Vehiculo-Operario-Materia Prima-Maquinaria-Grupo de recursos"!!Recurso methodsFor: 'accessing' stamp: 'RamiroMenendez 4/16/2024 23:55'!cronograma	^cronograma! !!Recurso methodsFor: 'accessing' stamp: 'RamiroMenendez 4/22/2024 19:34'!initialize	cronograma := Cronograma new.! !!Recurso methodsFor: 'set and get' stamp: 'RamiroMenendez 4/23/2024 17:58'!obtenerDisponibilidad	|disponibilidad|	disponibilidad := Disponibilidad new.	disponibilidad recurso: self.	"si el cronograma no tiene tareas, la hora disponible es 0, si tiene, mira la hora de fin de la ultima tarea."	cronograma listaTareas isEmpty ifTrue: [ disponibilidad hora: 0 ]									ifFalse: [ disponibilidad hora: cronograma listaTareas last horaFinal + 1 ]. 	^disponibilidad! !!Recurso methodsFor: 'printing' stamp: 'RamiroMenendez 4/23/2024 18:04'!imprimirCronograma	|a|	a := Array new: 42 withAll: ('_').	0 to: 41 do: [ :i | cronograma listaTareas do: [ :j | (i between: j horaInicial and: j horaFinal) ifTrue: [ a at: (i+1)*2 put: j codigoOrden ] ] ]. 	a do: [ :i | Transcript show: i ]	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Recurso class	instanceVariableNames: ''!!Recurso class methodsFor: 'instance creation' stamp: 'RamiroMenendez 4/22/2024 10:51'!new: unNombre	^self new nombre: unNombre.! !Recurso subclass: #GrupoRecurso	instanceVariableNames: 'nombre listaRecursos'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!GrupoRecurso commentStamp: 'RamiroMenendez 4/12/2024 15:31' prior: 0!"Representa un grupo de recursos, tiene un nombre y una colección de recursos" Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.!!GrupoRecurso methodsFor: 'accessing' stamp: 'RamiroMenendez 4/22/2024 21:51'!listaRecursos	^listaRecursos.! !!GrupoRecurso methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 15:33'!listaCrear	listaRecursos := OrderedCollection new.! !!GrupoRecurso methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 15:30'!nombre: unNombre nombre := unNombre! !!GrupoRecurso methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 15:30'!nombre ^nombre! !!GrupoRecurso methodsFor: 'adding item' stamp: 'RamiroMenendez 4/12/2024 15:36'!agregarRecurso: unRecurso	listaRecursos add: unRecurso ! !!GrupoRecurso methodsFor: 'set and get' stamp: 'RamiroMenendez 4/23/2024 00:58'!obtenerDisponibilidad	|disponibilidad recurso hora|	disponibilidad := Disponibilidad new.		hora := 21.	listaRecursos do: [ :i |								i obtenerDisponibilidad hora < hora ifTrue: [recurso := i. hora := i obtenerDisponibilidad hora].							 ].		disponibilidad recurso: recurso.		disponibilidad hora: hora + 1.		^disponibilidad! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GrupoRecurso class	instanceVariableNames: ''!!GrupoRecurso class methodsFor: 'instance creation' stamp: 'RamiroMenendez 4/16/2024 23:39'!new: unNombre		^self new nombre: unNombre; listaCrear.! !Recurso subclass: #Maquinaria	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!Maquinaria commentStamp: 'RamiroMenendez 4/12/2024 20:40' prior: 0!"Representa una maquinaria"Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.!!Maquinaria methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 20:40'!nombre: unNombre nombre := unNombre! !!Maquinaria methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 20:40'!nombre ^nombre! !Recurso subclass: #MateriaPrima	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!MateriaPrima commentStamp: 'RamiroMenendez 4/12/2024 20:34' prior: 0!"Representa a una materia prima"Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.!!MateriaPrima methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 20:34'!nombre: unNombre nombre := unNombre! !!MateriaPrima methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 20:34'!nombre ^nombre! !Recurso subclass: #Operario	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!Operario commentStamp: 'RamiroMenendez 4/12/2024 15:27' prior: 0!"Representa un operario"Public API and Key Messages- nombre - nombre: 'unNombre'- Operario new: 'unNombre'!!Operario methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 15:26'!nombre ^nombre! !!Operario methodsFor: 'setter' stamp: 'RamiroMenendez 4/12/2024 15:26'!nombre: unNombre nombre := unNombre! !Object subclass: #Tarea	instanceVariableNames: 'horaInicio horaFin codigoOrden'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!Tarea commentStamp: 'RamiroMenendez 4/12/2024 20:53' prior: 0!"Representa una tarea, tiene un horario de inicio y un horario de fin"Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.!!Tarea methodsFor: 'set and get' stamp: 'RamiroMenendez 4/22/2024 11:16'!codigoOrden	^codigoOrden ! !!Tarea methodsFor: 'set and get' stamp: 'RamiroMenendez 4/22/2024 11:15'!codigoOrden: unCodigo	codigoOrden := unCodigo ! !!Tarea methodsFor: 'set and get' stamp: 'RamiroMenendez 4/22/2024 10:48'!horaFinal: horaFinal	horaFin := horaFinal! !!Tarea methodsFor: 'set and get' stamp: 'RamiroMenendez 4/22/2024 23:52'!horaInicial	^horaInicio ! !!Tarea methodsFor: 'set and get' stamp: 'RamiroMenendez 4/22/2024 10:48'!horaInicial: horaInicial	horaInicio := horaInicial! !!Tarea methodsFor: 'set and get' stamp: 'RamiroMenendez 4/22/2024 18:48'!horaFinal	^horaFin.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tarea class	instanceVariableNames: ''!!Tarea class methodsFor: 'as yet unclassified' stamp: 'RamiroMenendez 4/22/2024 10:51'!nuevaDesde: horaInicial hasta: horaFinal	^self new horaInicial: horaInicial; horaFinal: horaFinal.! !!Tarea class methodsFor: 'as yet unclassified' stamp: 'RamiroMenendez 4/22/2024 19:22'!nuevaDesde: horaInicial hasta: horaFinal conCodigo: unCodigo	^self new horaInicial: horaInicial; horaFinal: horaFinal; codigoOrden: unCodigo.! !Recurso subclass: #Vehiculo	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'ParadigmasTP-TP'!!Vehiculo commentStamp: 'RamiroMenendez 4/12/2024 15:23' prior: 0!"Representa un vehiculo"Public API and Key Messages- nombre- nombre: 'Marca-PATENTE' - Vehiculo new: 'Marca-PATENTE'!!Vehiculo methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 15:21'!nombre: unNombre nombre := unNombre! !!Vehiculo methodsFor: 'accessing' stamp: 'RamiroMenendez 4/12/2024 15:21'!nombre ^nombre! !